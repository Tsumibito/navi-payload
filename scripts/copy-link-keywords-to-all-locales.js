/**
 * –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ Link Keywords —Å locale='uk' –Ω–∞ 'ru' –∏ 'en'
 * 
 * –ü—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∏–ª–∏ locale='uk' –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –∫–æ–ø–∏—Ä—É–µ—Ç Link Keywords –Ω–∞ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ª–æ–∫–∞–ª–∏.
 */

const { Client } = require('pg');
require('dotenv').config();

async function copyLinkKeywords() {
  console.log('üöÄ Starting: Copy Link Keywords to all locales\n');
  
  const client = new Client({
    connectionString: process.env.DATABASE_URI,
  });

  try {
    await client.connect();
    console.log('‚úÖ Connected to database\n');

    // 1. –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Å locale='uk' —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å link_keywords
    console.log('üìã Step 1: Finding records with Link Keywords (locale=uk)...');
    const ukRecords = await client.query(`
      SELECT id, entity_type, entity_id, locale, link_keywords,
             focus_keyphrase, stats, calculated_at
      FROM navi."seo-stats"
      WHERE locale = 'uk' 
        AND link_keywords IS NOT NULL
        AND jsonb_array_length(link_keywords->'keywords') > 0
      ORDER BY entity_type, entity_id
    `);

    if (ukRecords.rows.length === 0) {
      console.log('‚ÑπÔ∏è  No records with Link Keywords found for locale=uk');
      await client.end();
      process.exit(0);
    }

    console.log(`‚úÖ Found ${ukRecords.rows.length} records with Link Keywords\n`);
    console.table(ukRecords.rows.map(r => ({
      entity_type: r.entity_type,
      entity_id: r.entity_id,
      keywords_count: r.link_keywords?.keywords?.length || 0,
      focus_keyphrase: r.focus_keyphrase?.substring(0, 30) + '...',
    })));

    // 2. –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø–∏—Å–∏ –∫–æ–ø–∏—Ä—É–µ–º –Ω–∞ ru –∏ en
    console.log('\nüìã Step 2: Copying to ru and en locales...\n');
    
    let copiedCount = 0;
    const targetLocales = ['ru', 'en'];

    for (const record of ukRecords.rows) {
      for (const targetLocale of targetLocales) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∑–∞–ø–∏—Å—å –¥–ª—è —ç—Ç–æ–π –ª–æ–∫–∞–ª–∏
        const existing = await client.query(`
          SELECT id, link_keywords
          FROM navi."seo-stats"
          WHERE entity_type = $1
            AND entity_id = $2
            AND locale = $3
        `, [record.entity_type, record.entity_id, targetLocale]);

        if (existing.rows.length > 0) {
          // –ó–∞–ø–∏—Å—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ link_keywords
          await client.query(`
            UPDATE navi."seo-stats"
            SET link_keywords = $1,
                updated_at = NOW()
            WHERE entity_type = $2
              AND entity_id = $3
              AND locale = $4
          `, [
            JSON.stringify(record.link_keywords),
            record.entity_type,
            record.entity_id,
            targetLocale
          ]);

          console.log(`  ‚úÖ Updated: ${record.entity_type}/${record.entity_id} ‚Üí ${targetLocale}`);
        } else {
          // –ó–∞–ø–∏—Å–∏ –Ω–µ—Ç - —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—É—é
          await client.query(`
            INSERT INTO navi."seo-stats" 
              (entity_type, entity_id, locale, focus_keyphrase, stats, link_keywords, calculated_at, created_at, updated_at)
            VALUES 
              ($1, $2, $3, $4, $5, $6, $7, NOW(), NOW())
          `, [
            record.entity_type,
            record.entity_id,
            targetLocale,
            record.focus_keyphrase,
            JSON.stringify(record.stats),
            JSON.stringify(record.link_keywords),
            record.calculated_at
          ]);

          console.log(`  ‚úÖ Created: ${record.entity_type}/${record.entity_id} ‚Üí ${targetLocale}`);
        }

        copiedCount++;
      }
    }

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('\nüìã Step 3: Verifying results...\n');
    
    const finalCheck = await client.query(`
      SELECT entity_type, entity_id, locale,
             CASE 
               WHEN link_keywords IS NOT NULL 
               THEN jsonb_array_length(link_keywords->'keywords')
               ELSE 0
             END as keywords_count
      FROM navi."seo-stats"
      WHERE entity_type IN (
        SELECT DISTINCT entity_type 
        FROM navi."seo-stats" 
        WHERE locale = 'uk' 
          AND link_keywords IS NOT NULL
      )
      ORDER BY entity_type, entity_id, locale
    `);

    console.log('üìä Final state:');
    console.table(finalCheck.rows);

    console.log(`\nüéâ Success!`);
    console.log(`‚úÖ Copied Link Keywords to ${copiedCount} records`);
    console.log(`‚úÖ Total records with Link Keywords: ${finalCheck.rows.length}`);
    console.log('\nüí° Now Link Keywords are available in all locales (uk, ru, en)!\n');

    await client.end();
    process.exit(0);

  } catch (error) {
    console.error('\n‚ùå Error:', error.message);
    console.error('Stack:', error.stack);
    
    try {
      await client.end();
    } catch (e) {
      // ignore
    }
    
    process.exit(1);
  }
}

copyLinkKeywords();
