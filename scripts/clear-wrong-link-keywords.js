/**
 * –û—á–∏—Å—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö Link Keywords –¥–ª—è RU –∏ EN
 * 
 * –ü–æ—Å–ª–µ –º–∏–≥—Ä–∞—Ü–∏–∏ –º—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª–∏ —É–∫—Ä–∞–∏–Ω—Å–∫–∏–µ –∫–ª—é—á–∏ –Ω–∞ –≤—Å–µ —è–∑—ã–∫–∏,
 * –Ω–æ —ç—Ç–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ - –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–≤–æ–∏ –∫–ª—é—á–∏.
 * 
 * –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—á–∏—â–∞–µ—Ç link_keywords –¥–ª—è locale='ru' –∏ 'en',
 * —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–≥ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞.
 */

const { Client } = require('pg');
require('dotenv').config();

async function clearWrongKeywords() {
  console.log('üöÄ Starting: Clear wrong Link Keywords for RU and EN\n');
  
  const client = new Client({
    connectionString: process.env.DATABASE_URI,
  });

  try {
    await client.connect();
    console.log('‚úÖ Connected to database\n');

    // 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ –±—É–¥–µ–º –æ—á–∏—â–∞—Ç—å
    console.log('üìã Records with Link Keywords (will be cleared for ru/en):\n');
    const toClean = await client.query(`
      SELECT entity_type, entity_id, locale,
             jsonb_array_length(link_keywords->'keywords') as keywords_count
      FROM navi."seo-stats"
      WHERE locale IN ('ru', 'en')
        AND link_keywords IS NOT NULL
        AND jsonb_array_length(link_keywords->'keywords') > 0
      ORDER BY entity_type, entity_id, locale
    `);

    if (toClean.rows.length === 0) {
      console.log('‚ÑπÔ∏è  No Link Keywords found for ru/en locales. Nothing to clean.');
      await client.end();
      process.exit(0);
    }

    console.table(toClean.rows);
    console.log(`\n‚ö†Ô∏è  Will clear Link Keywords for ${toClean.rows.length} records\n`);

    // 2. –û—á–∏—â–∞–µ–º link_keywords –¥–ª—è RU –∏ EN
    console.log('üìã Clearing Link Keywords...\n');
    
    const result = await client.query(`
      UPDATE navi."seo-stats"
      SET link_keywords = NULL,
          updated_at = NOW()
      WHERE locale IN ('ru', 'en')
        AND link_keywords IS NOT NULL
      RETURNING entity_type, entity_id, locale
    `);

    console.log(`‚úÖ Cleared ${result.rowCount} records\n`);

    // 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    console.log('üìã Final state:\n');
    const final = await client.query(`
      SELECT entity_type, entity_id, locale,
             CASE 
               WHEN link_keywords IS NOT NULL 
               THEN jsonb_array_length(link_keywords->'keywords')
               ELSE 0
             END as keywords_count
      FROM navi."seo-stats"
      WHERE entity_id IN ('4', '16', '21', '22', '25', '44')
      ORDER BY entity_type, entity_id, locale
    `);

    console.table(final.rows);

    console.log('\nüéâ Done!');
    console.log('\n‚úÖ Link Keywords cleared for RU and EN locales');
    console.log('‚úÖ UK locale kept unchanged (original data)');
    console.log('\nüí° Now you can add correct keywords for each language:\n');
    console.log('  RU: "–≤–∏–¥—ã —è—Ö—Ç–µ–Ω–Ω—ã—Ö –ø—Ä–∞–≤", "—à–∫–∏–ø–µ—Ä—Å–∫–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã"');
    console.log('  EN: "types of yacht licenses", "skipper certificates"');
    console.log('  UK: "–≤–∏–¥–∏ —è—Ö—Ç–æ–≤–∏—Ö –ø—Ä–∞–≤", "—à–∫—ñ–ø–µ—Ä—Å—å–∫—ñ —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∏" (kept)\n');

    await client.end();
    process.exit(0);

  } catch (error) {
    console.error('\n‚ùå Error:', error.message);
    console.error('Stack:', error.stack);
    
    try {
      await client.end();
    } catch (e) {
      // ignore
    }
    
    process.exit(1);
  }
}

clearWrongKeywords();
