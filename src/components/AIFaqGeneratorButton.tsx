'use client';

import React, { useState } from 'react';
import { useDocumentInfo, Button } from '@payloadcms/ui';
import { AIFaqGeneratorDialog } from './AIFaqGeneratorDialog';

/**
 * –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è AI FAQ Generator
 * –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ admin –ø–∞–Ω–µ–ª–∏ Posts
 */
export const AIFaqGeneratorButton: React.FC = () => {
  const [isOpen, setIsOpen] = useState(false);
  const docInfo = useDocumentInfo();

  console.log('[AIFaqGeneratorButton] docInfo:', docInfo);

  const handleClick = () => {
    console.log('[AIFaqGeneratorButton] Button clicked');
    setIsOpen(true);
  };

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ—Å—Ç–æ–≤
  if (!docInfo?.id) {
    console.log('[AIFaqGeneratorButton] No docInfo.id, rendering fallback button');
    // –†–µ–Ω–¥–µ—Ä–∏–º –∫–Ω–æ–ø–∫—É –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    return (
      <div style={{ padding: '1rem', background: '#f0f0f0', borderRadius: '4px', marginBottom: '1rem' }}>
        <Button
          onClick={handleClick}
          buttonStyle="secondary"
          size="medium"
        >
          ü§ñ Generate FAQ with AI (Debug Mode)
        </Button>
        {isOpen && (
          <AIFaqGeneratorDialog
            postId="test"
            onClose={() => setIsOpen(false)}
          />
        )}
      </div>
    );
  }

  return (
    <div style={{ padding: '1rem', background: '#e8f5e9', borderRadius: '4px', marginBottom: '1rem' }}>
      <Button
        onClick={handleClick}
        buttonStyle="secondary"
        size="medium"
      >
        ü§ñ Generate FAQ with AI
      </Button>

      {isOpen && (
        <AIFaqGeneratorDialog
          postId={docInfo.id as string}
          onClose={() => setIsOpen(false)}
        />
      )}
    </div>
  );
};
